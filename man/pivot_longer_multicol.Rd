% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pivot_longer_multicol.R
\name{pivot_longer_multicol}
\alias{pivot_longer_multicol}
\title{pivot_longer_multicol}
\usage{
pivot_longer_multicol(
  .dat,
  .cols,
  .capture_groups = "(.+)_(.+)",
  .tag_group = 2,
  .tag_name = "time",
  ...
)
}
\arguments{
\item{.dat}{A dataframe containing the data to be pivoted.}

\item{.cols}{Either a string vector listing the names of the columns to be
pivoted or a \code{\link[tidyselect]{starts_with}} selection helper.}

\item{.capture_groups}{A string containing a regular expression defining
two capture groups, one capturing the name of the variable to be saved and
one group capturing the commonly formatted "tag" of the variables. Defaults
to \code{"(.+)_(.+)"}, which splits the variable names at the last "\emph{"
character present in the variable name (the final "}" is removed).}

\item{.tag_group}{Numeric scalar. Indicates the capture group (as defined
by the regular expression in \code{.capture_groups}) that contains the
commonly formatted "tag". Defaults to 2 (e.g., "sch_1" contains the tag in
the second group, while "t1_sch" contains a tag in the first). The tags will
eventually be passed to a variable (named by \code{.tag_name}), so it is
helpful if the tags are meaningful. For example, for variables
"sch_1" and "sch_2", a new variable will be created that will take values of
"1" and "2".}

\item{.tag_name}{String. Indicates the variable name that should be given to
the new variable containing the variable tags. Because this function was
created to manage the longitudinal school mobility process, the argument
defaults to "time".}

\item{...}{Not used at this time.}
}
\value{
This function returns a dataframe with the columns in \code{.cols}
pivoted to have a single column per unique value of the non-tag in
the capture group and a number of rows equal to the number of unique
values in the tag. NOTE: If the variables to be pivoted contain different
tag lengths (e.g., "sch_1" and "sch_2" have a tag with length 2 while
"id_1", "id_2", "id_3", and "id_4" have a tag with length 4), the variable
with the shorter tag length will have missing values where the tags do not
overlap.
}
\description{
This function chains two pivots from \code{\link[tidyr]{pivot_longer}} with
one pivot from \code{\link[tidyr]{pivot_wider}} to pivot from wide to long
on multiple columns. The columns to be pivoted must all have a "tag" in
in the original column name (e.g., "sch_1" and "sch_2" have a "_1" and a "_2"
tag indicating that data from two schools is present in the dataset). The
names must all have some common formatting/symbols before the tag in order
to allow all variables to be manipulated at the same time using this
function.
}
\examples{
\dontrun{

# prepare some data

temp_dat <- tibble(
  x = rnorm(100),
  y = rnorm(100),
  z_1 = rep(c(1, 0), 50),
  z_2 = rep(c(5, 6, 7, 8), 25),
  g_1 = rnorm(100),
  g_2 = rnorm(100),
  g_3 = rnorm(100),
  g_4 = rnorm(100)
)

pivot_longer_multicol(
  .dat = temp_dat,
  .cols = tidyr::matches("_")
)

}
}
